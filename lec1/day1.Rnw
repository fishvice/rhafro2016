% SLIDES - brug denne linie
\documentclass[mathserif]{beamer} % options: gray

% HANDOUTS - brug denne linie
%\documentclass[handout,mathserif]{beamer} % options: gray

\usetheme{CambridgeUS} %sidebar
\usecolortheme{dolphin}

\usepackage{graphicx}
\usepackage{amssymb,amsmath}
\usepackage[T1]{fontenc}
%\usepackage[icelandic]{babel}
\usepackage[english]{babel}
\usepackage[utf8]{inputenc}
\usepackage{bm}
\usepackage{tipx}
\usepackage{marvosym}
%\usepackage{subfigure}
\usepackage{pgfpages}
\usepackage{multirow}

\usepackage{tikz,makecell}
\usetikzlibrary{arrows,decorations.pathmorphing,decorations.footprints,
fadings,calc,trees,mindmap,shadows,decorations.text,patterns,positioning,shapes,matrix,fit}
\input{graphical_settings}
\tikzset{
  invisible/.style={opacity=0},
  visible on/.style={alt={#1{}{invisible}}},
  alt/.code args={<#1>#2#3}{%
    \alt<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}} % \pgfkeysalso doesn't change the path
  },
}
% hvis man vil har eg. 4 slides på en side
% \pgfpagesuselayout{4 on 1}[a4paper,border shrink = 5mm, landscape]

\definecolor{lgrey}{RGB}{245,245,245}
\setbeamercolor{block body}{fg=black,bg=lgrey}


\newcommand{\bs}{\boldsymbol}
\newcommand{\bi}{\begin{itemize}\item}
\newcommand{\ei}{\end{itemize}}
\newcommand{\eq}[1]{\begin{equation} #1 \end{equation}}
\newcommand{\ea}[1]{\begin{eqnarray} #1 \end{eqnarray}}
\newcommand{\vs}{\vspace{2mm}}

\definecolor{Red}{rgb}{0.9,0,0.1}

\title[R-Hafro]{Hafro goes R}
\subtitle{Course on data wrangling using R}
\author[Bjarki\&Einar]{Bjarki Þór Elvarsson and Einar Hjörleifsson}
\date{} % beskidt .. men det virker
\institute[MRI]{Marine Research Institute}
\beamertemplatenavigationsymbolsempty % fjerner pdf-indhold, til hvis der bare skal printes slides ud
\AtBeginSection[]{
\begin{frame}<beamer>
   \frametitle{Overview}
   \tableofcontents[currentsection]
 \end{frame}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<echo=FALSE, warning=FALSE, message=FALSE>>=
library(ggplot2)
library(plyr)
library(dplyr)
@
\frame{
\titlepage
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\frame{
\frametitle{Overview}
\tableofcontents
}

\section{Course outline}
\frame{
  \frametitle{Course outline}
\bi The lecture series will tackle some recent development in R. The intended structure of the course is to have a weekly seminar/practical lab which introduces a particular topic followed by a small assignment as well as suggested further readings.
\vs
\item  The series is intended for those that have not very much experience in using R as their daily working environment. The instructors will be Bjarki Þór Elvarsson and Einar Hjörleifsson.
\vs
\item  The seminars will be in English, this being because the R environment is in that language as well as to accommodate potential participants whose native language may be other then Icelandic.
\ei

}
\frame{
\frametitle{Course outline (cont.)}
 The aim is that during this course the students will learn how to:
  \bi Import data from various sources and fix common data issues
  \vs
  \item Produce summary statistics from the data
  \vs
  \item Illustrate graphically various aspects of the data
  \vs
  \item Create dynamic reports using the combination of R and Markdown
  \ei
\vs
}


\frame{
  \frametitle{List of potential topics and dates}
\begin{columns}
\begin{column}{0.5\linewidth}
\bi Friday, 22. January 2016
    \bi RStudio and project management
    \item Basis of reproducible analysis and document writing
    \item Some R base
    \ei
    \vs

\item  Friday, 19. January 2016
    \bi Getting data into R - introduction
    \item  Introduction to the grammar of graphics, the ggplot2 library
    \ei
    \ei

  \end{column}
  \begin{column}{0.5\linewidth}
\bi Friday, 5. February
    \bi Getting data into R - beyond introduction
    \item  Introduction to the grammar of data, the dplyr library
    \ei
    \vs

\item Friday, 12. January
    \bi Data exploration based on grammar of data and graphics
    \ei
  \vs
\item Friday, 19. February
    \bi More data exploration based on grammar of data and graphics
    \ei
  \ei
  \end{column}
  \end{columns}

}

\frame{
\frametitle{Today:}
\begin{columns}
\begin{column}{0.7\linewidth}

  \bi Introduction to the R-environment
  \vs
\item RStudio and project management
\vs
\item Using R
\vs
\item Basis of reproducible analysis and document writing
\ei
  \end{column}
  \begin{column}{0.3\linewidth}
  \includegraphics[width=0.55\linewidth]{Rlogo-1.png}\\
  \vs
  \vs
  \vs
  \vs
  \includegraphics[width=0.55\linewidth]{RStudio-Ball.png}
  \end{column}
  \end{columns}

}

\section{Introduction to R}

\frame{
\includegraphics[width=0.9\linewidth]{Dont-Panic.jpg}

}

\frame{
  \frametitle{Why R?}
  R has become the lingua france of statistical analysis and data wrangling
  \vs
  \bi It’s free! If you are a teacher or a student, the benefits are obvious
  \vs
  \item It runs on a variety of platforms including Windows, Unix and MacOS
  \vs
  \item It provides an unparalleled platform for programming new statistical
methods in an easy and straightforward manner
  \vs
  \item It offers powerful tools for data exploration and presentation
  \ei

}

\frame{
\frametitle{Why not Excel}
\bi In an article from 1998 titled "On the accuracy of statistical procedures in Microsoft Excel 97" \cite{mccullough1999accuracy} noted: \textit{Persons desiring to conduct statistical
analyses of data are advised not to use Excel}
\vs
\item<2-> In 2002 \cite{mccullough2002accuracy}: \textit{Microsoft attempted to fix errors
in  the  standard  normal  random  number  generator  and  the  inverse  normal  function,  and  in  the
former case actually made the problem worse}.
\vs
\item<3-> In 2005 \cite{mccullough2005accuracy} :  \textit{Additionally, in fixing some errors, Microsoft introduced other errors}
\vs
\item<4-> In 2008 \cite{mccullough2008accuracy}: \textit{Persons who wish to conduct statistical analyses should use some other package}.

\ei
}

\frame{
\frametitle{The origins of R}
\begin{tikzpicture}
\node at (0,0) {\includegraphics[width=0.3\linewidth]{punchcard.jpg}};
\node[visible on=<2->] at (0,4) {\includegraphics[width=0.3\linewidth]{oldComputer.jpg}};
\node[visible on=<3->] at (5,4){\includegraphics[width=0.3\linewidth]{newComputer.jpg}};
\node[visible on=<4->] at (5,0) {\includegraphics[width=0.3\linewidth]{R-idea.png}};
\end{tikzpicture}
}

%\begin{columns}
%\begin{column}{0.5\linewidth}
%\includegraphics[width=0.9\linewidth]{bell.png}
%\end{column}
%\begin{column}{0.5\linewidth}

%\bi The early days of statistical computing used fortran (and punchcards)
%\item The S language conceived to allow interactive data analysis, combining fortran routines
%\item Developed at Bell labs in the late 70's by John Chambers
%\item One of many languages developed at the time for interactive data analysis and calculations (SAS, SPSS, %Matlab)
%\item Commercially implemented as Splus
%\ei
%\end{column}
%\end{columns}



\frame{
\frametitle{What is R?}
\includegraphics[width=0.9\linewidth]{garage.jpg}

}

\frame{
\frametitle{What is R (cont)}
\bi R is commandline driven:
  \bi its biggest appeal as one can reuse commands
  \item its biggest hurdle in widespread use
  \ei
  \vs
  \item R is open-source:
  \bi Other statistical software packages can be extremely expensive
  \item Large user base with almost all statistical methods implemented
  \ei
  \ei

}

\frame{
\frametitle{R - interfaces}
\begin{tikzpicture}
\node[anchor=center] at (0,0){\includegraphics[width=0.4\linewidth]{rcommandline.png}};
\node[visible on=<2->] at (0,-2){\includegraphics[width=0.4\linewidth]{Rmac.jpg}};
\node[visible on=<3->] at (-2,0){\includegraphics[width=0.4\linewidth]{ess.png}};
\node[visible on=<4->] at (0,2){\includegraphics[width=0.4\linewidth]{rkward.png}};
\node[visible on=<5->] at (2,0){\includegraphics[width=0.4\linewidth]{rcmmdr.jpg}};
\node[visible on=<6->] at (0,0){\includegraphics[width=0.6\linewidth]{rstudio0.png}};

\end{tikzpicture}

}

\section{RStudio}
\frame{
\frametitle{RStudio}

\bi RStudio allows the user to run R in a more user-friendly environment.  It is open- source (i.e. free) and available at \url{www.rstudio.com}
\vs
\item built to help you write R code, run R code, and analyze data with R
\vs
\item text editor, version control, project handling, markdown support, keyboard shortcuts, debugging tools, and much more
\ei
}

\frame{
\frametitle{Using R-studio}

   \begin{tikzpicture}
    \node[anchor=south west,inner sep=0] at (0,0) {\includegraphics[width=0.8\textwidth]{rstudio}};
    \node[red,ultra thick] at (2,2) {R - console};
%    \node[red,ultra thick,visible on=<3->] at (8,5) {Session info};
%    \node[red,ultra thick,visible on=<4->] at (2,5) {Script editor};
%    \node[red,ultra thick,visible on=<5->] at (8,2) {Other items};
\end{tikzpicture}

}

\begin{frame}[fragile]
\frametitle{R-console}
One can type commands directly into the console to perform calculations:
<<>>=
1+1 ## this should be 2
mean(c(1,2,3,4,5)) ## mean of all numbers from 1 to 5
@
and assign the results with the "<-" sign:
<<>>=
x <- 1+1 ## save the result into a variable named x
x        ## print out the value of x to screen
@

\end{frame}



\begin{frame}[fragile]
\frametitle{Using R as a calculator}
R can be used as calculator:
<<eval=FALSE>>=
1+1       # 1 plus 1 equals 2;)
2*2       # 2 times 2 equals 4
3^2.5     # 3 to the power of 2.5
exp(5)    # e to the power of 5
log(5)    # natural logarithm (ln) of 5
log10(5)  # Base 10 log of 5
1/2       # 1 over 2 equals 0.5
@


\end{frame}



\frame{
\frametitle{Data types}
R has a number data types:
\bi Numbers: integers, reals and complex
\vs
\item Strings: letters, words, files etc..
\vs
\item Logicals: TRUE or FALSE
\vs
\item Factors: integer numbers that correspond to a fixed (limited) set of values
\ei
}

\frame{
\frametitle{Data structures}
One of R's many strengths are multiple data structures:
\bi \textbf{vectors} (1d)
\vs
\item matricies (2d)
\vs
\item arrays (nd)
\vs
\item \textbf{dataframes} (2d)
\vs
\item lists (1d, sort of)
\vs
\item ...
\ei
}


\frame{
\frametitle{Vectors}
Vectors can contain:
\bi Numbers
\item Strings
\item Logicals
\ei
<<eval=FALSE>>=
x <- c(1,2,3)
y <- c('a','b','c')
z <- c(TRUE,FALSE)
class(x)          # returns the type of vector
@

}


\begin{frame}[fragile]
\frametitle{Useful commands for vectors}
<<eval=FALSE>>=
seq(1,10)        # makes a vector from 1 to 10
1:10             # same
rep(2,3)         # makes a vector that contains 2, 3 times
length(y)        # returns the length of a vecor named y
sort(y)          # sorts a vector into ascending or
                 # descending order
cut(y)           # divides the range of y into intervals and
                 # makes a factor variable
as.character(y)  # changes y to a character vector
cbind(x1,x2)     # binds vectors by columns
rbind(x1,x2)     # binds vectors by rows

@
\end{frame}


\begin{frame}[fragile]
\frametitle{Useful commands for vectors (II)}
<<eval=FALSE>>=
mean()       # mean
median()     # median
quantile()   # quantiles
summary()    # depends on what we feed it with...
sd()         # standard deviation
var()        # variance
range()      # range
min()        # smallest value
max()        # largest value
@

\end{frame}

\begin{frame}[fragile]
\frametitle{Selecting parts of a vector}
<<eval=FALSE>>=
x[1]          ## get the first element of a vector
x[c(1,2)]     ## get the first and second element
x[-1]         ## get every element except the first one
x[-c(1,2)]    ## get every element except 1 and 2
x[x==3]       ## all element that are equal to 3

@

\end{frame}

\begin{frame}[fragile]
\frametitle{Dataframes}
\bi Dataframes are collections of vectors (columns) of the same length, similar to a table in a database
\vs
\item The columns do not need to be of the same type
\vs
\item One can access the columns:
<<eval=FALSE>>=
data$Col.name        ## get column named Col.name
data[,1]             ## get column number 1
@
\item and the entries in the column:
<<eval=FALSE>>=
data$Col.name[1]    ## get entry number 1 from Col.name
data[2,1]           ## get entry number 2 from column 1
@
\ei
\end{frame}

\frame{
\frametitle{Using R-studio}

   \begin{tikzpicture}
    \node[anchor=south west,inner sep=0] at (0,0) {\includegraphics[width=0.8\textwidth]{rstudio}};
%    \node[red,ultra thick,visible on=<2->] at (2,2) {R - console};
%    \node[red,ultra thick,visible on=<3->] at (8,5) {Session info};
    \node[red,ultra thick] at (2,5) {Script editor};
%    \node[red,ultra thick,visible on=<5->] at (8,2) {Other items};
\end{tikzpicture}

}

\begin{frame}[fragile]
\frametitle{Working in R}
\bi In R we use \textit{commands} to create new \textit{objects}. When we do that we have a choice to do two things:
\bi The command spits out the results to the screen and then these results forgotten
\item The command saves the output so we can reuse it.
\ei
\vs
\item R can't save the object without giving it a name
<<eval=FALSE>>=
name <- command
@

\vs
\item Note that, like in real life, there is not undo button
\vs
\item One should rather "remember" the commands used to create the object
\ei
\end{frame}

\frame{
\frametitle{Script editor}
  \bi Is opened when selecting File->New file->R script from the menu panel
  \vs
  \item A R script is basically a series of R commands that can be run in the console
  \vs
  \item It is recommended to store all commands that "work" in a script for later reconstruction of a particular analysis
  \vs
  \item It is possible to run a single line in a script by pressing [ctrl]+Enter or the \includegraphics[width=0.1\linewidth]{button.png}  button in the top right corner
  \ei
}


\frame{
\frametitle{Using R-studio}

   \begin{tikzpicture}
    \node[anchor=south west,inner sep=0] at (0,0) {\includegraphics[width=0.8\textwidth]{rstudio}};
%    \node[red,ultra thick] at (2,2) {R - console};
    \node[red,ultra thick] at (8,5) {Session info};
%    \node[red,ultra thick,visible on=<4->] at (2,5) {Script editor};
%    \node[red,ultra thick,visible on=<5->] at (8,2) {Other items};
\end{tikzpicture}

}

\frame{
\frametitle{Session info}
  \begin{columns}
  \begin{column}{0.5\linewidth}
  \bi \textbf{Environment}: Contains a list of all declared variables. If you have a dataset you can double click the variable to view the data
  \vs
  \vs
  \item \textbf{History}: Contains a list of all previous commands entered into the console.
\ei
  \end{column}
  \begin{column}{0.5\linewidth}
  \includegraphics[width=0.9\linewidth]{env.png}\\
  \vs
  \includegraphics[width=0.9\linewidth]{hist.png}
  \end{column}
  \end{columns}
}



\frame{
\frametitle{Using R-studio}

   \begin{tikzpicture}
    \node[anchor=south west,inner sep=0] at (0,0) {\includegraphics[width=0.8\textwidth]{rstudio}};
%    \node[red,ultra thick] at (2,2) {R - console};
%    \node[red,ultra thick] at (8,5) {Session info};
%    \node[red,ultra thick,visible on=<4->] at (2,5) {Script editor};
    \node[red,ultra thick] at (8,2) {Other items};
\end{tikzpicture}

}

\frame{
\frametitle{Other items--files}
\begin{columns}
\begin{column}{0.5\linewidth}
  \textbf{Files}: Shows files on the computer. The user can change the working directory (where R reads data-files and scripts from) by selecting "more->Set as working directory"
  \end{column}
\begin{column}{0.5\linewidth}
\includegraphics[width=0.9\linewidth]{files.png}
\end{column}
\end{columns}

}

\frame{
\frametitle{Other items--plots}
\begin{columns}
\begin{column}{0.5\linewidth}
 \textbf{Plots}: Graphical output from R. The user can export these the figures to file (as jpeg, png or pdf) or to clipboard

\end{column}
\begin{column}{0.5\linewidth}
\includegraphics[width=0.9\linewidth]{plot.png}
\end{column}
\end{columns}

}

\frame{
\frametitle{Other items--help}
\begin{columns}
\begin{column}{0.5\linewidth}
\textbf{Help}: Gives a browsable interface to R's in-line help pages. The user can search for a topic or a specific function
\end{column}
\begin{column}{0.5\linewidth}
\includegraphics[width=0.9\linewidth]{help.png}
\end{column}
\end{columns}

}


\frame{
\frametitle{On help}
A help page for a function usually has the following categories:
\bi \textbf{Description}: short description of the function
\item \textbf{Usage}: how the function is used/called from R
\item \textbf{Arguments}: What are the function inputs
\item \textbf{Details}: The nitty gritty on how the function should work
\item \textbf{Examples}: example uses
\item \textbf{See also}: other useful functions that are similar
\ei

}

\begin{frame}[fragile]
\frametitle{Help commands}
One can also get help from the console:
<<eval=FALSE>>=
help.start()         # General help page
help(nameOffuntion)  # Gives the help page needed
?nameOffunction      # shorthand
help.search('topic') # searches for specific topic
@

\end{frame}


\frame{
\frametitle{Packages}
\bi One of R's greatest strengths comes from specialized add-ons, called \textit{packages} that the user can download and install
\vs
\item Users download packages from CRAN's website (Comprehensive R Archive Network)
\vs
\item Currently at 7811 packages (January 20th 2016)
\vs
\item All packages comes with both an in-line and pdf manual
\ei

}

\frame{
\frametitle{Package growth}
\includegraphics[width=0.9\linewidth]{packages.png}
}

\frame{
\frametitle{MRI's R packages}
\bi geo -- nautical charts (also available on CRAN)
\vs
\item ora -- data base connectivity
\vs
\item fjolst -- all samples from commercial and survey vessels
\vs
\item Logbooks -- logbooks from the commercial fishery
\vs
\item Rgadget -- specialised package to interact with Gadget
\ei
}

\begin{frame}[fragile]
\frametitle{Using packages}
\bi One can use the \texttt{install.packages} command to download and install packages
\vs
\item To use the package in an R session one needs to load it into memory using the \texttt{library} command
\vs
\item In R-studio one can also select, load and install packages in the "other items" part
\ei
<<eval=FALSE>>=
install.packages('ggplot2') ## install package named ggplot2
library(ggplot2)            ## load it into memory
@

\end{frame}

\frame{
\frametitle{Projects}
  \bi Rstudio allows us to make things a little bit easier to isolate the task we are working with a any given point by defining specific \textbf{projects}
  \vs
  \item Projects save the state between sessions. This includes:
  \bi Working directories
  \item Open files/scripts
  \item Workspaces
  \item Color scheme
  \ei
  \vs
  \item Projects are created by selecting File->New project
  \ei
}

\frame{
\frametitle{Turning R off}
  When shutting down R and Rstudio it reminds you to save your work: \\ \vs
  \includegraphics[width=0.5\linewidth]{shutdown.png}\\ \vs
  In general you should \textbf{not} save your workspace unless the analysis takes a long time to reproduce.

}

\frame{
\frametitle{Don't save your workspace}
\includegraphics[width=0.9\linewidth]{cluttered-garage.jpg}
}



\frame{
  \frametitle{Excercise 1}
  \bi Create a new directory anywhere on your computer and names it "Classwork"
  \item Open R-studio and create a new project called "classEx1" and associate it with the newly created directory
  \item Install ggplot2, tidyr, dplyr and gridExtra if you haven't done so already
  \item Create a new script named 'Ex1.R'
  \item Look at the help page for 'sum'
  \item Write a script that calculates the sum of all numbers from 1 to 100
\ei
}



\end{document}
